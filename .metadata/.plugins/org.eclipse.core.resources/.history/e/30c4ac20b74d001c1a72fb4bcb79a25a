package edu.kh.servlet;

import java.io.IOException;
import java.io.PrintWriter;
import java.util.Arrays;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

public class TestServlet1 extends HttpServlet{

	@Override
	protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
		//HttpServletRequest req : 요청 괸련 데이터, 정보를 가지고 있는 객체 
		//HttpServletResponse resp : 응답 괸련 데이터, 정보를 가지고 있는 객체 
		// Parameter: 클라이언트 요청 시 전달 받은 값
		
		String inputName = req.getParameter("inputName");
		//-> 요청 시 전달받은 값 중 name 속성 값이 "inputName"인 input 태그릐 value를 얻어옴
		
		String gender = req.getParameter("gender");
		
		//요청 시 전달 받은 값 중 중복되는 name 속성이 있는 경우 
		// 이름의 같은 다수의 파라미터를 하나의 배열로 저장 (index로 구분)
		
		String[] hobby = req.getParameterValues("hobby");
		String[] hashtag = req.getParameterValues("hashtag");
		
		System.out.println(inputName);
		System.out.println(gender);
		System.out.println(Arrays.toString(hobby)); // 아니면 향상된 for 문 
		System.out.println(Arrays.toString(hashtag)); // 아니면 향상된 for 문 
		
		//응답 
		//클라이언트의 요청에 따라 처리된 내용을 서버 -> 클라이언트로 전달 
		
		//servlet을 이용하여 응답하는 경우 
		//요청에 따라 응답화면 모랼을 변경할 수 있다.
		// -> servlet 에서 상황에달라 html코드를 새로 만들기 때문 
		
		//servlet을 이용한 응답화면 만들기 
		//1.응답화면(html)형식 지정 
		resp.setContentType("text/html; charset=UTF-8");
		
		//2.만들어진 응답 화면을 전달 받을 클라이언트와의 연결 통로(스트림)얻어오기
		 PrintWriter out = resp.getWriter(); //문자기반 스트릠 얻어오기
		
	}
}
